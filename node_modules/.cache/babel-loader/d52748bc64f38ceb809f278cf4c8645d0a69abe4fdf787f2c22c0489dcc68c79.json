{"ast":null,"code":"var _jsxFileName = \"/Users/alex/ws/react/the-final-todo/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TodoForm from \"./components/TodoForm\";\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todoList, setTodoList] = useState([{\n    id: 1,\n    todo: \"test todo\",\n    completed: true\n  }, {\n    id: 2,\n    todo: \"do coding\",\n    completed: false\n  }]);\n  const addTodo = todo => {\n    if (!todo) {\n      alert(\"please add todo!\");\n      return;\n    }\n    const data = {\n      id: todoList.length < 1 ? 1 : todoList[todoList.length - 1].id + 1,\n      todo: todo,\n      completed: false\n    };\n    setTodoList([...todoList, data]);\n  };\n  const completeTodo = id => {\n    setTodoList(todoList.map(todo => todo.id === id ? Object.assign(todo, {\n      completed: true\n    }) && todo : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"React Typescript Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoList\",\n        children: todoList.map((todo, key) => /*#__PURE__*/_jsxDEV(TodoList, {\n          todo: todo,\n          completeTodo: completeTodo,\n          deleteTodo: deleteTodo\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"w85LQCMsLX+6NaUK4Mm5zYFm9RA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TodoForm","TodoList","jsxDEV","_jsxDEV","App","_s","todoList","setTodoList","id","todo","completed","addTodo","alert","data","length","completeTodo","map","Object","assign","className","children","fileName","_jsxFileName","lineNumber","columnNumber","key","deleteTodo","_c","$RefreshReg$"],"sources":["/Users/alex/ws/react/the-final-todo/src/App.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport { ITodo } from \"./components/interfaces\";\n\nimport TodoForm from \"./components/TodoForm\";\n\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList\";\n\nconst App: FC = () => {\n  const [todoList, setTodoList] = useState<ITodo[]>([\n    {\n      id: 1,\n      todo: \"test todo\",\n      completed: true,\n    },\n    {\n      id: 2,\n      todo: \"do coding\",\n      completed: false,\n    },\n  ]);\n\n  const addTodo = (todo: string): void => {\n    if (!todo) {\n      alert(\"please add todo!\");\n      return;\n    }\n    const data: ITodo = {\n      id: todoList.length < 1 ? 1 : todoList[todoList.length - 1].id + 1,\n      todo: todo,\n      completed: false,\n    };\n    setTodoList([...todoList, data]);\n  };\n\n  const completeTodo = (id: number): void => {\n    setTodoList(\n      todoList.map(\n        (todo: ITodo): ITodo =>\n        todo.id === id\n        ? Object.assign(todo, { completed: true }) && todo\n        : todo\n      )\n    );\n  };\n\n\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"heading\">React Typescript Todo App</h1>\n      <div className=\"container\">\n        <TodoForm addTodo={addTodo} />\n        <div className=\"todoList\">\n          {todoList.map((todo: ITodo, key: number) => (\n            <TodoList\n              key={key}\n              todo={todo}\n              completeTodo={completeTodo}\n              deleteTodo={deleteTodo}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAG3C,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAU,CAChD;IACES,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAE;EACb,CAAC,EACD;IACEF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAE;EACb,CAAC,CACF,CAAC;EAEF,MAAMC,OAAO,GAAIF,IAAY,IAAW;IACtC,IAAI,CAACA,IAAI,EAAE;MACTG,KAAK,CAAC,kBAAkB,CAAC;MACzB;IACF;IACA,MAAMC,IAAW,GAAG;MAClBL,EAAE,EAAEF,QAAQ,CAACQ,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGR,QAAQ,CAACA,QAAQ,CAACQ,MAAM,GAAG,CAAC,CAAC,CAACN,EAAE,GAAG,CAAC;MAClEC,IAAI,EAAEA,IAAI;MACVC,SAAS,EAAE;IACb,CAAC;IACDH,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEO,IAAI,CAAC,CAAC;EAClC,CAAC;EAED,MAAME,YAAY,GAAIP,EAAU,IAAW;IACzCD,WAAW,CACTD,QAAQ,CAACU,GAAG,CACTP,IAAW,IACZA,IAAI,CAACD,EAAE,KAAKA,EAAE,GACZS,MAAM,CAACC,MAAM,CAACT,IAAI,EAAE;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC,IAAID,IAAI,GAChDA,IAAI,CACP,CACF;EACH,CAAC;EAID,oBACEN,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAIgB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtDrB,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBjB,OAAA,CAACH,QAAQ;QAACW,OAAO,EAAEA;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC9BrB,OAAA;QAAKgB,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtBd,QAAQ,CAACU,GAAG,CAAC,CAACP,IAAW,EAAEgB,GAAW,kBACrCtB,OAAA,CAACF,QAAQ;UAEPQ,IAAI,EAAEA,IAAK;UACXM,YAAY,EAAEA,YAAa;UAC3BW,UAAU,EAAEA;QAAW,GAHlBD,GAAG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAKX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACnB,EAAA,CA1DID,GAAO;AAAAuB,EAAA,GAAPvB,GAAO;AA4Db,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}